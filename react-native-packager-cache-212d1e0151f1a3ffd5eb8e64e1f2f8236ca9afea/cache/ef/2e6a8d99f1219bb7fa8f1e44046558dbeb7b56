Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = "/home/yitzhaq_m/react/flatApp2/src/screens/SignUp/index.js";

var _react = require("react");

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require("react-native");

var _nativeBase = require("native-base");

var _reduxForm = require("redux-form");

var _styles = require("./styles");

var _styles2 = babelHelpers.interopRequireDefault(_styles);

var _commonColor = require("../../theme/variables/commonColor");

var _commonColor2 = babelHelpers.interopRequireDefault(_commonColor);

var required = function required(value) {
  return value ? undefined : "Required";
};
var maxLength = function maxLength(max) {
  return function (value) {
    return value && value.length > max ? "Must be " + max + " characters or less" : undefined;
  };
};
var maxLength15 = maxLength(15);
var minLength = function minLength(min) {
  return function (value) {
    return value && value.length < min ? "Must be " + min + " characters or more" : undefined;
  };
};
var minLength8 = minLength(8);
var minLength5 = minLength(5);
var email = function email(value) {
  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(value) ? "Invalid email address" : undefined;
};
var alphaNumeric = function alphaNumeric(value) {
  return value && /[^a-zA-Z0-9 ]/i.test(value) ? "Only alphanumeric characters" : undefined;
};

var SignUpForm = function (_Component) {
  babelHelpers.inherits(SignUpForm, _Component);

  function SignUpForm() {
    babelHelpers.classCallCheck(this, SignUpForm);
    return babelHelpers.possibleConstructorReturn(this, (SignUpForm.__proto__ || Object.getPrototypeOf(SignUpForm)).apply(this, arguments));
  }

  babelHelpers.createClass(SignUpForm, [{
    key: "renderInput",
    value: function renderInput(_ref) {
      var _this2 = this;

      var input = _ref.input,
          label = _ref.label,
          type = _ref.type,
          _ref$meta = _ref.meta,
          touched = _ref$meta.touched,
          error = _ref$meta.error,
          warning = _ref$meta.warning;

      return _react2.default.createElement(
        _nativeBase.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 44
          }
        },
        _react2.default.createElement(
          _nativeBase.Item,
          { error: error && touched, rounded: true, style: _styles2.default.inputGrp, __source: {
              fileName: _jsxFileName,
              lineNumber: 45
            }
          },
          _react2.default.createElement(_nativeBase.Icon, {
            active: true,
            name: input.name === "username" ? "person" : input.name === "email" ? "mail" : "unlock",
            style: { color: "#fff" },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 46
            }
          }),
          _react2.default.createElement(_nativeBase.Input, babelHelpers.extends({
            ref: function ref(c) {
              return _this2.textInput = c;
            },
            placeholderTextColor: "#FFF",
            style: _styles2.default.input,
            placeholder: input.name === "username" ? "Username" : input.name === "email" ? "Email" : "Password",
            secureTextEntry: input.name === "password" ? true : false
          }, input, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 55
            }
          })),
          touched && error ? _react2.default.createElement(_nativeBase.Icon, {
            active: true,
            style: _styles2.default.formErrorIcon,
            onPress: function onPress() {
              return _this2.textInput._root.clear();
            },
            name: "close",
            __source: {
              fileName: _jsxFileName,
              lineNumber: 68
            }
          }) : _react2.default.createElement(_nativeBase.Text, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 74
            }
          })
        ),
        touched && error ? _react2.default.createElement(
          _nativeBase.Text,
          { style: _styles2.default.formErrorText1, __source: {
              fileName: _jsxFileName,
              lineNumber: 77
            }
          },
          error
        ) : _react2.default.createElement(
          _nativeBase.Text,
          { style: _styles2.default.formErrorText2, __source: {
              fileName: _jsxFileName,
              lineNumber: 80
            }
          },
          "> error here"
        )
      );
    }
  }, {
    key: "signUp",
    value: function signUp() {
      if (this.props.valid) {
        this.props.navigation.goBack();
      } else {
        _nativeBase.Toast.show({
          text: "All the fields are compulsory!",
          duration: 2500,
          position: "top",
          textStyle: { textAlign: "center" }
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        _nativeBase.Container,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 99
          }
        },
        _react2.default.createElement(_reactNative.StatusBar, {
          backgroundColor: _commonColor2.default.statusBarColor,
          barStyle: "light-content",
          __source: {
            fileName: _jsxFileName,
            lineNumber: 100
          }
        }),
        _react2.default.createElement(
          _reactNative.Image,
          {
            source: require("../../../assets/bg-signup.png"),
            style: _styles2.default.background,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 104
            }
          },
          _react2.default.createElement(
            _nativeBase.Content,
            { padder: true, __source: {
                fileName: _jsxFileName,
                lineNumber: 108
              }
            },
            _react2.default.createElement(
              _nativeBase.Text,
              { style: _styles2.default.signupHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 109
                }
              },
              "CREATE ACCOUNT"
            ),
            _react2.default.createElement(
              _nativeBase.View,
              { style: _styles2.default.signupContainer, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 110
                }
              },
              _react2.default.createElement(_reduxForm.Field, {
                name: "username",
                component: this.renderInput,
                type: "text",
                validate: [required, alphaNumeric, minLength5],
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 111
                }
              }),
              _react2.default.createElement(_reduxForm.Field, {
                name: "email",
                component: this.renderInput,
                type: "email",
                validate: [email, required],
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 118
                }
              }),
              _react2.default.createElement(_reduxForm.Field, {
                name: "password",
                component: this.renderInput,
                type: "password",
                validate: [alphaNumeric, minLength8, maxLength15, required],
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 124
                }
              }),
              _react2.default.createElement(
                _nativeBase.Button,
                {
                  rounded: true,
                  bordered: true,
                  block: true,
                  onPress: function onPress() {
                    return _this3.signUp();
                  },
                  style: _styles2.default.signupBtn,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 131
                  }
                },
                _react2.default.createElement(
                  _nativeBase.Text,
                  { style: { color: "#FFF" }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 138
                    }
                  },
                  "Continue"
                )
              )
            )
          ),
          _react2.default.createElement(
            _nativeBase.Footer,
            {
              style: {
                paddingLeft: 20,
                paddingRight: 20
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 142
              }
            },
            _react2.default.createElement(
              _nativeBase.Left,
              { style: { flex: 2 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 148
                }
              },
              _react2.default.createElement(
                _nativeBase.Button,
                { small: true, transparent: true, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 149
                  }
                },
                _react2.default.createElement(
                  _nativeBase.Text,
                  { style: _styles2.default.helpBtns, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 150
                    }
                  },
                  "Terms & Conditions"
                )
              )
            ),
            _react2.default.createElement(
              _nativeBase.Right,
              { style: { flex: 1 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 153
                }
              },
              _react2.default.createElement(
                _nativeBase.Button,
                {
                  small: true,
                  transparent: true,
                  onPress: function onPress() {
                    return _this3.props.navigation.goBack();
                  },
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 154
                  }
                },
                _react2.default.createElement(
                  _nativeBase.Text,
                  { style: _styles2.default.helpBtns, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 159
                    }
                  },
                  "SignIn"
                )
              )
            )
          )
        )
      );
    }
  }]);
  return SignUpForm;
}(_react.Component);

var SignUp = (0, _reduxForm.reduxForm)({
  form: "signup"
})(SignUpForm);
exports.default = SignUp;