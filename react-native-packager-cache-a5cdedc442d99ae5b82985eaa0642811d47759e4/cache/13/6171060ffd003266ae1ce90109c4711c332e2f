Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = "/home/yitzhaq_m/devfest/veto/src/screens/Login/index.js";

var _react = require("react");

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require("react-native");

var _nativeBase = require("native-base");

var _reduxForm = require("redux-form");

var _styles = require("./styles");

var _styles2 = babelHelpers.interopRequireDefault(_styles);

var bg = require("../../../assets/bg.png");
var logo = require("../../../assets/logo.png");

var required = function required(value) {
  return value ? undefined : "Required";
};
var maxLength = function maxLength(max) {
  return function (value) {
    return value && value.length > max ? "Must be " + max + " characters or less" : undefined;
  };
};
var maxLength15 = maxLength(15);
var minLength = function minLength(min) {
  return function (value) {
    return value && value.length < min ? "Must be " + min + " characters or more" : undefined;
  };
};
var minLength8 = minLength(8);
var email = function email(value) {
  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(value) ? "Invalid email address" : undefined;
};
var alphaNumeric = function alphaNumeric(value) {
  return value && /[^a-zA-Z0-9 ]/i.test(value) ? "Only alphanumeric characters" : undefined;
};

var LoginForm = function (_Component) {
  babelHelpers.inherits(LoginForm, _Component);

  function LoginForm() {
    babelHelpers.classCallCheck(this, LoginForm);
    return babelHelpers.possibleConstructorReturn(this, (LoginForm.__proto__ || Object.getPrototypeOf(LoginForm)).apply(this, arguments));
  }

  babelHelpers.createClass(LoginForm, [{
    key: "renderInput",
    value: function renderInput(_ref) {
      var _this2 = this;

      var input = _ref.input,
          label = _ref.label,
          type = _ref.type,
          _ref$meta = _ref.meta,
          touched = _ref$meta.touched,
          error = _ref$meta.error,
          warning = _ref$meta.warning;

      return _react2.default.createElement(
        _nativeBase.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 47
          }
        },
        _react2.default.createElement(
          _nativeBase.Item,
          { error: error && touched, rounded: true, style: _styles2.default.inputGrp, __source: {
              fileName: _jsxFileName,
              lineNumber: 48
            }
          },
          _react2.default.createElement(_nativeBase.Icon, {
            active: true,
            name: input.name === "email" ? "mail" : "unlock",
            style: { color: "#fff" },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 49
            }
          }),
          _react2.default.createElement(_nativeBase.Input, babelHelpers.extends({
            ref: function ref(c) {
              return _this2.textInput = c;
            },
            placeholderTextColor: "#FFF",
            style: _styles2.default.input,
            placeholder: input.name === "email" ? "Email" : "Password",
            secureTextEntry: input.name === "password" ? true : false
          }, input, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 54
            }
          })),
          touched && error ? _react2.default.createElement(_nativeBase.Icon, {
            active: true,
            style: _styles2.default.formErrorIcon,
            onPress: function onPress() {
              return _this2.textInput._root.clear();
            },
            name: "close",
            __source: {
              fileName: _jsxFileName,
              lineNumber: 63
            }
          }) : _react2.default.createElement(_nativeBase.Text, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 69
            }
          })
        ),
        touched && error ? _react2.default.createElement(
          _nativeBase.Text,
          { style: _styles2.default.formErrorText1, __source: {
              fileName: _jsxFileName,
              lineNumber: 72
            }
          },
          error
        ) : _react2.default.createElement(
          _nativeBase.Text,
          { style: _styles2.default.formErrorText2, __source: {
              fileName: _jsxFileName,
              lineNumber: 75
            }
          },
          "error here"
        )
      );
    }
  }, {
    key: "login",
    value: function login() {
      if (this.props.valid) {
        this.props.navigation.navigate("Walkthrough");
      } else {
        _nativeBase.Toast.show({
          text: "Enter Valid Username & password!",
          duration: 2500,
          position: "top",
          textStyle: { textAlign: "center" }
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var navigation = this.props.navigation;
      return _react2.default.createElement(
        _nativeBase.Container,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 96
          }
        },
        _react2.default.createElement(_reactNative.StatusBar, { barStyle: "light-content", __source: {
            fileName: _jsxFileName,
            lineNumber: 97
          }
        }),
        _react2.default.createElement(
          _reactNative.Image,
          { source: bg, style: _styles2.default.background, __source: {
              fileName: _jsxFileName,
              lineNumber: 98
            }
          },
          _react2.default.createElement(
            _nativeBase.Content,
            { contentContainerStyle: { flex: 1 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 99
              }
            },
            _react2.default.createElement(
              _nativeBase.View,
              { style: _styles2.default.container, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 100
                }
              },
              _react2.default.createElement(_reactNative.Image, { source: logo, style: _styles2.default.logo, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 101
                }
              })
            ),
            _react2.default.createElement(
              _nativeBase.View,
              { style: _styles2.default.container, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 103
                }
              },
              _react2.default.createElement(
                _nativeBase.View,
                { style: _styles2.default.form, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 104
                  }
                },
                _react2.default.createElement(_reduxForm.Field, {
                  name: "email",
                  component: this.renderInput,
                  type: "email",
                  validate: [email, required],
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 105
                  }
                }),
                _react2.default.createElement(_reduxForm.Field, {
                  name: "password",
                  component: this.renderInput,
                  type: "password",
                  validate: [alphaNumeric, minLength8, maxLength15, required],
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 111
                  }
                }),
                _react2.default.createElement(
                  _nativeBase.Button,
                  {
                    rounded: true,
                    primary: true,
                    block: true,
                    large: true,
                    style: _styles2.default.loginBtn,
                    onPress: function onPress() {
                      return _this3.login();
                    },
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 118
                    }
                  },
                  _react2.default.createElement(
                    _nativeBase.Text,
                    {
                      style: _reactNative.Platform.OS === "android" ? { fontSize: 16, textAlign: "center", top: -5 } : { fontSize: 16, fontWeight: "900" },
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 126
                      }
                    },
                    "Get Started"
                  )
                ),
                _react2.default.createElement(
                  _nativeBase.View,
                  { style: _styles2.default.otherLinksContainer, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 137
                    }
                  },
                  _react2.default.createElement(
                    _nativeBase.Left,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 138
                      }
                    },
                    _react2.default.createElement(
                      _nativeBase.Button,
                      {
                        small: true,
                        transparent: true,
                        style: { alignSelf: "flex-start" },
                        onPress: function onPress() {
                          return navigation.navigate("SignUp");
                        },
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 139
                        }
                      },
                      _react2.default.createElement(
                        _nativeBase.Text,
                        { style: _styles2.default.helpBtns, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 145
                          }
                        },
                        "Create Account"
                      )
                    )
                  ),
                  _react2.default.createElement(
                    _nativeBase.Right,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 148
                      }
                    },
                    _react2.default.createElement(
                      _nativeBase.Button,
                      {
                        small: true,
                        transparent: true,
                        style: { alignSelf: "flex-end" },
                        onPress: function onPress() {
                          return navigation.navigate("ForgotPassword");
                        },
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 149
                        }
                      },
                      _react2.default.createElement(
                        _nativeBase.Text,
                        { style: _styles2.default.helpBtns, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 155
                          }
                        },
                        "Forgot Password"
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  _nativeBase.View,
                  { style: { flex: 1, alignSelf: "flex-end" }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 159
                    }
                  },
                  _react2.default.createElement(
                    _nativeBase.Button,
                    {
                      light: true,
                      small: true,
                      transparent: true,
                      style: _styles2.default.skipBtn,
                      onPress: function onPress() {
                        return navigation.navigate("Walkthrough");
                      },
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 160
                      }
                    },
                    _react2.default.createElement(
                      _nativeBase.Text,
                      {
                        style: ([_styles2.default.helpBtns], { top: _reactNative.Platform.OS === "ios" ? null : 0 }),
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 167
                        }
                      },
                      "Skip"
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);
  return LoginForm;
}(_react.Component);

var Login = (0, _reduxForm.reduxForm)({
  form: "login"
})(LoginForm);
exports.default = Login;